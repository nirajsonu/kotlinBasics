Kotlin programs
-------------------
semicolon is optional in kotlin.

1) fun main(args: Array<String>) {
    //println for print value to console with new line
    println("Kotlin is easy for java developers")
    //For print with same line
    print("only syntax is different concepts are same with java")
}

//var keyword is introduced in kotlin for assigning any value to variable type is automittically detect by kotlin language.We reassign value which keyword declared in var

//val do the same thing except we cannot reassign the value if we do get compile time exception(Val cannot be reassigned).
2) fun main(args: Array<String>) {
    var year=2010
    var version=1.0
    var langauge_made_by="jetbrain"
    println("this language is made by "+langauge_made_by+"in "+year +"and the first version is "+version)
}

//Koltin does not support primite data type everything in kotlin is class
3)fun main(args: Array<String>) {
var integer:Int=10
    var string:String="Kotlin with datatypes"
    var double:Double=1.2
    var float:Float=1.5f
    var long:Long=1L
    var boolean:Boolean=true
    println(string)
    println(double)
    println(float)
    println(long)
    println(boolean)
}


//for loop with Arrays
4)import java.util.*

fun main(args: Array<String>) {
    print("++++++++++++++++++++++++++++++++++++")

    var intArray:IntArray= intArrayOf(1,2,3,4,5,6)
    for(i in intArray)
    {
        print("\nintArray-->"+i+"\n")
    }
    println(intArray.indices)

    print("++++++++++++++++++++++++++++++++++++")

    var char:CharArray= charArrayOf('a', 'b','c','d','e','f','g')
    for(i in char)
    {
        print("\nCharArray-->"+i+"\n")
    }
    println(char.indices)

    print("++++++++++++++++++++++++++++++++++++")

    var stringArray= arrayOf("hello","i","am","Neeraj")
    for(i in stringArray)
    {
        print("\nStringArray-->"+i+"\n")
    }
    println(stringArray.indices)

    print("++++++++++++++++++++++++++++++++++++")

    var doubleArray=doubleArrayOf(123344.0,33444.4,4444.5)
    for(i in doubleArray)
    {
        print("\nDoubleArray-->"+i+"\n")
    }
    println(doubleArray.indices)

    print("++++++++++++++++++++++++++++++++++++")

    var floatArray= floatArrayOf(1.2f,1.5f,5.6f)
    for(i in floatArray)
    {
        print("\nFloatArray-->"+i+"\n")
    }
    println(floatArray.indices)
    print("++++++++++++++++++++++++++++++++++++")

    var byteArray= byteArrayOf(1,3,4,127)
    for(i in byteArray)
    {
        print("\nByteArray-->"+i+"\n")
    }
    println(byteArray.indices)

    print("++++++++++++++++++++++++++++++++++++")

    var booleanArray= booleanArrayOf(true,false)
    for(i in booleanArray)
    {
        print("\nBooleanArray-->"+i+"\n")
    }
    println(booleanArray.indices)

    print("++++++++++++++++++++++++++++++++++++")

    var shotArray= shortArrayOf(1,23,45)
    for(i in shotArray)
    {
        print("\nShortArray-->"+i+"\n")
    }
    println(shotArray.indices)
}

//simple fucntion program
5) fun main(args: Array<String>) {
 var x =  Area(10,5)
    print(x)
}

fun Area(lenght:Int,breath:Int) :Int
{
    return lenght*breath;
}

//taking input in kotlin
6>  import java.util.*

fun main(args: Array<String>) {
    println("Enter the two numbers")
    var y:Int=Integer.valueOf(readLine())
    var z:Int=Integer.valueOf(readLine())
    println(y+z)
}

//overriding
7>open class Student {
    var a:String="student class member variable"
    open fun m1()
    {
        println("student class")
    }
}
class Teacher: Student()
{
override fun m1()
    {
    println("Teacher class")
}
    fun m2()
    {
        println("This is m2 method from teacher class")
    }
}

//Data Class
8>data class Student(var name:String,var city:String,var mobile:Long)
var s=Student("Neeraj","Jaipur",7549046724)
    println(s)
    println(s.mobile)
    println(s.city)
    println(s.name)


//When statement similar to switch case in java
9>fun main(args: Array<String>) {
    println("Enter your choice between 1 to 7")
var days = Integer.valueOf(readLine())
    var day_name=when(days)
    {
        1->"SunDay"
        2->"MonDay"
        3->"TuesDay"
        4->"WebNesDay"
        5->"Thursday"
        6->"Friday"
        7->"Saturday"
        else ->"No days founded.."
    }
    println("your day is $day_name")
}

//When with multiple cases it ran upmost matched records
10>fun main(args: Array<String>) {
var x=2
    when(x)
    {
        in 1..5 -> {
            println("Hello 1-5")
        }
        2->{
            println("Hi")
        }

        in 1..10->
        {
            println("Hello 1-10")
        }
    }
}

//Function with return type
11>fun m1() :String{
    return "World"
}

//getting the objects
12>class Student (var x:String="hello")
{
    var z="student"
fun m1() :String{
    //var y="World"
    return "World"
}
}
fun main(args: Array<String>) {
var s=Student()
    println(s.x)
    println(s.m1())
    println(s.z)
}
13>Static class
object Student {
    const val x="Hello world"
}

fun main(args: Array<String>) {
val s=Student.x
    print(s)
}

14>companion object
class Student {
    companion object {
        const val y=123
    }
}
fun main(args: Array<String>) {
    println(Student.y)
}

15>String Templates
fun main(args: Array<String>) {
    var name="Neeraj"
    print("my name is $name")
}

16>Constuctor with initilization
class Student {
var x:Int=0
    var y:Int=0
}

fun main(args: Array<String>) {
   var s=Student()
    s.x=10
    s.y=15
    println("Length of Rectangle is = ${s.x}")
    println("Breath of Rectangle is = ${s.y}")
    println("Area of Rectangle is = ${s.y* s.x}")
}

17>Named parameters
class Student {
fun m1(name:String,city:String):String
{
    return name+city
}
}

fun main(args: Array<String>) {
   var s=Student();
 println(s.m1(name = "Neeraj ",city = " Ranchi"))
 println(s.m1("Sandip ", " Patna"))
}
